name: Build SDKs

on:
  push:
    branches: ["dev/next-gen"]
  pull_request:
    branches: ["master"]

env:
  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

jobs:
  build_linux_x86:
    name: Compile Linux-Ubuntu-x86
    runs-on: ubuntu-latest
    container: 
      image: ubuntu:18.04  # 使用 Ubuntu 18.04 容器
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      # 首先安装基础工具
      - name: Install basic tools
        run: |
          apt-get update
          apt-get install -y git python3 python3-pip wget software-properties-common
      
      - name: Update submodules
        run: |
          git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
      
      - name: Install Dependencies
        run: |
          apt-get install -y build-essential libgtk-3-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev
      
      - name: Start Building
        run: |
          bash command/build_wheel_linux_ubuntu18.sh
          ls python/dist
      
      - name: Upload to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip3 install twine
          twine upload python/dist/* -u __token__ -p $PYPI_API_TOKEN

  # build_macos_arm64:
  #   name: Compile MacOS-arm64
  #   runs-on: macos-14
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]

  #   steps:
  #     # Step 1: Checkout the repository
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
      
  #     # Step 2: Setting up the Python environment
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
      
  #     # Step 3: Synchronize and update submodules
  #     - name: Update submodules
  #       run: |
  #         git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
      
  #     # Step 4: Install necessary dependencies for building the CMake project
  #     - name: Install Dependencies
  #       run: |
  #         brew install cmake

  #     # Step 5: Build the SDK
  #     - name: Start Building the InspireFace-Linux-x86
  #       run: |
  #         bash command/build_wheel_macos_arm64.sh
  #         ls python/dist
      
  #     # Step 6: Upload to PyPI
  #     - name: Upload to PyPI
  #       env:
  #         PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       run: |
  #         pip install twine
  #         twine upload python/dist/* -u __token__ -p $PYPI_API_TOKEN