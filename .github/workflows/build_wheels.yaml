name: Build Wheels

on:
  push:
    branches: ["feature/modelscope"]
  pull_request:
    branches: ["feature/modelscope"]

env:
  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

jobs:
  build_manylinux2014_x86_64:
    name: Compile manylinux2014_x86_64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Update submodules
        run: |
          git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
        
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Execute Docker Compose
        run: |
          docker-compose up build-manylinux2014-x86
          
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: manylinux2014-wheels
          path: python/dist/*
          retention-days: 1

  build_manylinux2014_aarch64:
    name: Compile manylinux2014_aarch64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Update submodules
        run: |
          git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
        
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Execute Docker Compose
        run: |
          docker-compose up build-manylinux2014-aarch64
          
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: manylinux2014-aarch64-wheels
          path: python/dist/*
          retention-days: 1

  build_macos_arm64:
    name: Compile MacOS-arm64
    runs-on: macos-14
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Update submodules
        run: |
          git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
          
      - name: Install Dependencies
        run: |
          brew install cmake
          
      - name: Build the SDK
        run: |
          bash command/build_wheel_macos_arm64.sh
          ls python/dist
          
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-wheels-py${{ matrix.python-version }}
          path: python/dist/*
          retention-days: 1

  build_macos_x86_64:
    name: Compile MacOS-x86_64
    runs-on: macos-13
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Update submodules
        run: |
          git clone --recurse-submodules https://github.com/tunmx/inspireface-3rdparty.git 3rdparty
          
      - name: Install Dependencies
        run: |
          brew install cmake
          
      - name: Build the SDK
        run: |
          bash command/build_wheel_macos_x86.sh
          ls python/dist
          
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64-wheels-py${{ matrix.python-version }}
          path: python/dist/*
          retention-days: 1

  upload_to_pypi:
    name: Upload Wheels to PyPI
    needs: [build_manylinux2014_x86_64, build_manylinux2014_aarch64, build_macos_arm64, build_macos_x86_64]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          
      - name: Upload to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          find dist -name "*.whl" -exec twine upload {} -u __token__ -p $PYPI_API_TOKEN \;